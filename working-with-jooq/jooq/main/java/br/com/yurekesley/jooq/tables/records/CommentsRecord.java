/*
 * This file is generated by jOOQ.
 */
package br.com.yurekesley.jooq.tables.records;


import br.com.yurekesley.jooq.tables.Comments;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentsRecord extends UpdatableRecordImpl<CommentsRecord> implements Record6<Integer, Integer, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = -1228214225;

    /**
     * Setter for <code>test.COMMENTS.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.COMMENTS.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.COMMENTS.POST_ID</code>.
     */
    public void setPostId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.COMMENTS.POST_ID</code>.
     */
    public Integer getPostId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>test.COMMENTS.NAME</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.COMMENTS.NAME</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.COMMENTS.EMAIL</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.COMMENTS.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.COMMENTS.CONTENT</code>.
     */
    public void setContent(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.COMMENTS.CONTENT</code>.
     */
    public String getContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>test.COMMENTS.CREATED_ON</code>.
     */
    public void setCreatedOn(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.COMMENTS.CREATED_ON</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, String, String, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Comments.COMMENTS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Comments.COMMENTS.POST_ID;
    }

    @Override
    public Field<String> field3() {
        return Comments.COMMENTS.NAME;
    }

    @Override
    public Field<String> field4() {
        return Comments.COMMENTS.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return Comments.COMMENTS.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Comments.COMMENTS.CREATED_ON;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPostId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getContent();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedOn();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPostId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getContent();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedOn();
    }

    @Override
    public CommentsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CommentsRecord value2(Integer value) {
        setPostId(value);
        return this;
    }

    @Override
    public CommentsRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public CommentsRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public CommentsRecord value5(String value) {
        setContent(value);
        return this;
    }

    @Override
    public CommentsRecord value6(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public CommentsRecord values(Integer value1, Integer value2, String value3, String value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentsRecord
     */
    public CommentsRecord() {
        super(Comments.COMMENTS);
    }

    /**
     * Create a detached, initialised CommentsRecord
     */
    public CommentsRecord(Integer id, Integer postId, String name, String email, String content, LocalDateTime createdOn) {
        super(Comments.COMMENTS);

        set(0, id);
        set(1, postId);
        set(2, name);
        set(3, email);
        set(4, content);
        set(5, createdOn);
    }
}
