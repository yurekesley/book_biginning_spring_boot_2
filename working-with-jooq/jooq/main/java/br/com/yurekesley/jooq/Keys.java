/*
 * This file is generated by jOOQ.
 */
package br.com.yurekesley.jooq;


import br.com.yurekesley.jooq.tables.Comments;
import br.com.yurekesley.jooq.tables.Posts;
import br.com.yurekesley.jooq.tables.records.CommentsRecord;
import br.com.yurekesley.jooq.tables.records.PostsRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>test</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CommentsRecord, Integer> IDENTITY_COMMENTS = Identities0.IDENTITY_COMMENTS;
    public static final Identity<PostsRecord, Integer> IDENTITY_POSTS = Identities0.IDENTITY_POSTS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CommentsRecord> KEY_COMMENTS_PRIMARY = UniqueKeys0.KEY_COMMENTS_PRIMARY;
    public static final UniqueKey<PostsRecord> KEY_POSTS_PRIMARY = UniqueKeys0.KEY_POSTS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CommentsRecord, PostsRecord> COMMENTS_IBFK_1 = ForeignKeys0.COMMENTS_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CommentsRecord, Integer> IDENTITY_COMMENTS = Internal.createIdentity(Comments.COMMENTS, Comments.COMMENTS.ID);
        public static Identity<PostsRecord, Integer> IDENTITY_POSTS = Internal.createIdentity(Posts.POSTS, Posts.POSTS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CommentsRecord> KEY_COMMENTS_PRIMARY = Internal.createUniqueKey(Comments.COMMENTS, "KEY_COMMENTS_PRIMARY", new TableField[] { Comments.COMMENTS.ID }, true);
        public static final UniqueKey<PostsRecord> KEY_POSTS_PRIMARY = Internal.createUniqueKey(Posts.POSTS, "KEY_POSTS_PRIMARY", new TableField[] { Posts.POSTS.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CommentsRecord, PostsRecord> COMMENTS_IBFK_1 = Internal.createForeignKey(Keys.KEY_POSTS_PRIMARY, Comments.COMMENTS, "comments_ibfk_1", new TableField[] { Comments.COMMENTS.POST_ID }, true);
    }
}
